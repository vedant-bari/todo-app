{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth-guard.service.ts","./src/app/services/login.service.ts","./src/app/services/profile.service.ts","./src/app/services/registration.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n\nconst routes: Routes = [\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'profile', component: ProfileComponent, canActivate:[AuthGuardService]},\n  // { path: '', component: LoginComponent },\n  { path: '', component: ProfileComponent, canActivate:[AuthGuardService]},\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\n\nexport class AppRoutingModule {\n  \n }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-codework';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ClarityModule } from \"@clr/angular\";\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { AuthGuardService } from './services/auth-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    ClarityModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule, \n    ReactiveFormsModule, \n    BrowserAnimationsModule,\n    \n  ],\n  providers: [AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\nimport { LoginService} from '../services/login.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  public loginForm: FormGroup;\n  public submitted: boolean = false;\n  public loader: boolean = true;\n  public otpsend: boolean = false;\n  public errorFlag: boolean = false;\n  public verification_code: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private loginService : LoginService,\n  ) { }\n\n  ngOnInit(): void {\n    this.generateLoginForm();\n  }\n\n\n  generateLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n\n  \n\n  onSubmit() {\n    this.submitted = true;\n   \n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loader = true;\n    console.log(\"here\")\n    this.loginService.userLogin(this.loginForm.value).subscribe(response =>{\n      console.log(response)\n      localStorage.setItem('token', response[\"token\"]);\n      localStorage.setItem('user', JSON.stringify(response[\"user\"]));\n      this.router.navigate(['/profile'])\n      this.loader = false;\n      \n      \n      \n    },\n    error =>{\n      this.errorFlag = true;\n      console.log(\"error\", error)\n\n    }\n    );\n      \n  }\n\n}","<div class=\"login-wrapper\">\n\n    <div class=\"login-group\">\n        <form [formGroup]=\"loginForm\" class=\"login\">\n            <h2>Login Form </h2>\n\n\n            <clr-input-container>\n                <input clrInput formControlName=\"email\" type=\"text\" id=\"email\" placeholder=\"Enter Your Email\" required>\n                <clr-control-error *clrIfError=\"'required'\"> Email is required</clr-control-error>\n\n            </clr-input-container>\n\n            <clr-password-container>\n                <input clrPassword formControlName=\"password\" type=\"password\" id=\"password\"\n                    placeholder=\"Enter your password\" required>\n                <clr-control-error *clrIfError=\"'required'\"> Password is required</clr-control-error>\n\n            </clr-password-container>\n\n            <div></div>\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorFlag\">\n                <div class=\"alert-items\">\n                    <div class=\"alert-item static\">\n                        <div class=\"alert-icon-wrapper\">\n                            <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                        </div>\n                        <span class=\"alert-text\">\n                        Incorrect password or email.\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <!-- <div *ngIf=\"loader\">\n                <span class=\"spinner spinner-sm\" >\n                    Loading...\n                </span>\n            </div> -->\n            \n\n            <div>\n                <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">Submit</button>\n                <button class=\"btn btn-primary\" type=\"submit\" routerLink=\"/register/\">Register</button>\n            </div>\n\n\n\n        </form>\n    </div>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\nimport { ProfileService } from '../services/profile.service';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  public tweet: string = '';\n  public tweetList: any = [];\n  public usersList: any =[];\n  public followersList: any =[];\n  public followerstweetList : any =[];\n  public profileData : any = {};\n  public editMode: boolean = false;\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private profileService: ProfileService,\n    private loginService: LoginService,\n  ) { \n    \n  }\n\n\n  \n\n  ngOnInit(): void {\n    this.profileData = JSON.parse(localStorage.getItem('user'));\n    this.getTweetList();\n    this.getAllUserslist();\n    this.getFollowersTweetList();   \n    this.getAllFollowerslist();\n  }\n\n  profileDetails() {\n    \n    this.loginService.userProfileDetail().subscribe(response => {\n      console.log(\"response\",response)\n      this.profileData = response;\n      console.log(\"profile Data\", this.profileData);\n\n    },\n      error => {\n        console.log(\"error \",error)\n\n      }\n    );\n    \n  }\n\n  \n\n\n  onSubmit(){\n    console.log(\"tweet\", this.tweet)\n    this.profileService.createTweet({\"text\":this.tweet}).subscribe(\n      resp=>{\n         console.log(\"resp\",resp) \n         this.tweetList.unshift(resp) \n      },\n      error =>{\n        console.log(\"resp\",error) \n      }\n    )\n  }\n  \n\n  getTweetList(){\n    console.log(\"tweet\", this.tweet)\n    this.profileService.userTweets().subscribe(\n      resp=>{\n         this.tweetList = resp; \n          \n      },\n      error =>{\n        console.log(\"resp\",error) \n      }\n    )\n  }\n\n  getFollowersTweetList(){\n    console.log(\"tweet\", this.tweet)\n    this.profileService.followersTweets().subscribe(\n      resp=>{\n         this.followerstweetList = resp; \n          \n      },\n      error =>{\n        console.log(\"resp\",error) \n      }\n    )\n  }\n\n  getAllUserslist(){\n    this.profileService.getUsers().subscribe(\n      resp =>{\n        console.log(resp)\n        this.usersList = resp\n    },\n      error =>{\n        console.log(error)\n      }\n  )    \n  }\n\n  getAllFollowerslist(){\n    this.profileService.getFollowers().subscribe(\n      resp =>{\n        console.log(resp)\n        this.followersList = resp\n    },\n      error =>{\n        console.log(error)\n      }\n  )    \n  }\n\n  addFollower(id){\n    console.log(\"user_id\", id);\n    this.profileService.addFollower(id).subscribe(\n      resp=>{\n        console.log(\"resp\",resp)\n        let follower_index = this.usersList.findIndex(o => o.id === id);\n        console.log(\"index\",follower_index);\n        this.usersList.splice(follower_index,1);\n        \n        \n      }\n    )\n  }\n\n  logOut(){\n    this.loginService.logOutUser();\n    this.router.navigate(['/login']);\n\n  }\n\n\n\n  \n\n}\n","<h3>{{ profileData.first_name }} {{ profileData.last_name }}'s dashboard</h3>\n<div class=\"container\">\n  <!-- <form clrForm> -->\n  <!-- <clr-input-container> -->\n  <input clrInput placeholder=\"My tweet\" name=\"input\" [(ngModel)]=\"tweet\" />\n  <!-- </clr-input-container> -->\n  <!-- <br> -->\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit() \">Tweet</button>\n\n  <!-- </form> -->\n\n\n\n</div>\n\n\n<div></div>\n\n<ng-container *ngIf=\"tweetList.length > 0 else nousertweet\">\n  <h5>My tweets</h5>\n  <clr-datagrid>\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Tweet</clr-dg-column>\n\n    <clr-dg-row *ngFor=\"let tweet of tweetList\">\n      <!-- <clr-dg-cell>{{tweet.user_full_name}}</clr-dg-cell> -->\n      <clr-dg-cell>{{tweet.created_at | date:'short':'IST'}}</clr-dg-cell>\n      <!-- <clr-dg-cell>{{user.creation | date}}</clr-dg-cell> -->\n      <clr-dg-cell>{{tweet.text}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>{{tweetList.length}} Tweets</clr-dg-footer>\n\n    \n  </clr-datagrid>\n\n\n</ng-container>\n\n\n\n\n\n\n<div></div>\n\n<ng-container *ngIf=\"followerstweetList.length > 0 else nofollowertweet\">\n  <h5>My Follower's tweets</h5>\n  <clr-datagrid >\n    \n    <clr-dg-column>User Name</clr-dg-column>\n    <!-- <clr-dg-column>Name</clr-dg-column> -->\n    <clr-dg-column>Creation date</clr-dg-column>\n    <clr-dg-column>Tweet</clr-dg-column>\n  \n    <clr-dg-row *ngFor=\"let tweet of followerstweetList\">\n      <clr-dg-cell>{{tweet.user_full_name}}</clr-dg-cell>\n      <clr-dg-cell>{{tweet.created_at | date:'short':'IST'}}</clr-dg-cell>\n      <!-- <clr-dg-cell>{{user.creation | date}}</clr-dg-cell> -->\n      <clr-dg-cell>{{tweet.text}}</clr-dg-cell>\n    </clr-dg-row>\n  \n    <clr-dg-footer>{{followerstweetList.length}} Tweets</clr-dg-footer>\n  </clr-datagrid>\n</ng-container>\n\n\n<div></div>\n\n<ng-container *ngIf=\"usersList.length > 0 else nouserstofollow\"> \n  <h5>Users You can Follow</h5>\n  <clr-datagrid >\n    \n    <clr-dg-column>User Name</clr-dg-column>\n    <!-- <clr-dg-column>Name</clr-dg-column> -->\n    <!-- <clr-dg-column>Creation date</clr-dg-column> -->\n    <clr-dg-column>Follow</clr-dg-column>\n  \n    <clr-dg-row *ngFor=\"let user of usersList\">\n      <clr-dg-cell>{{user.full_name}}</clr-dg-cell>\n      <!-- <clr-dg-cell>{{tweet.created_at | date:'short':'IST'}}</clr-dg-cell> -->\n      <!-- <clr-dg-cell>{{user.creation | date}}</clr-dg-cell> -->\n      <clr-dg-cell><button class=\"btn btn-primary\" (click)=\"addFollower(user.id)\">Follow</button></clr-dg-cell>\n    </clr-dg-row>\n  \n    <clr-dg-footer>{{usersList.length}} users</clr-dg-footer>\n  </clr-datagrid>\n</ng-container>\n\n<div></div>\n\n\n\n<ng-template #nousertweet>\n  <div>You haven't tweeted anything yet !!</div>\n</ng-template>\n\n<div></div>\n\n<ng-template #nofollowertweet>\n  <div>No tweets from followers or you are not following any users</div>\n</ng-template>\n\n<div></div>\n\n<ng-template #nouserstofollow>\n  <div>No users to follow</div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\nimport { RegistrationService } from '../services/registration.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public registerForm: FormGroup;\n  public submitted: boolean = false;\n  public loader: boolean = false;\n  public errorFlag:boolean = false;\n  public errorMessage ={};\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private service: RegistrationService,\n  ) { }\n\n  ngOnInit(): void {\n    this.generateRegistrationForm()\n\n  }\n\n\n  generateRegistrationForm() {\n    this.registerForm = this.fb.group({\n      first_name: ['', Validators.required],\n      last_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password1: ['', [Validators.required, Validators.minLength(8)]],\n      password2: ['', [Validators.required, Validators.minLength(8)]]\n    });\n\n  }\n\n  get f() { return this.registerForm.controls; }\n\n\n  onSubmit() {\n    this.submitted = true;\n    this.loader = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    \n    console.log(\"here\")\n    setTimeout(() => {\n      console.log('hello');\n    }, 5000);\n  \n\n    this.service.userRegistration(this.registerForm.value).subscribe(response => {\n      console.log(\"success\",response);\n      this.loader = false;\n      this.router.navigate(['/login'])\n      // localStorage.setItem('token', response[\"token\"]);\n      // // localStorage.setItem('user', response[\"user\"]);\n      // console.log(\"token\",localStorage.getItem('token'));\n      \n    },\n      error => {\n        this.loader = false;\n        this.errorMessage =error.error.email[0];\n        this.errorFlag = true;\n        console.log(\"error\", error.error.email[0])\n      }\n    );\n\n  }\n\n\n}\n","<div class=\"login-wrapper\" *ngIf=\"!loader\">\n\n   \n    <form [formGroup]=\"registerForm\" class=\"login\">\n        <h2>Registration Form </h2>\n        <clr-input-container>\n            <input clrInput formControlName=\"first_name\" type=\"text\" id=\"first_name\" placeholder=\"Enter First Name\"  required>\n            <clr-control-error *clrIfError=\"'required'\">First Name is required\n            </clr-control-error>    \n                \n        </clr-input-container>\n\n        <clr-input-container>\n            <input clrInput formControlName=\"last_name\" type=\"text\" id=\"last_name\" placeholder=\"Enter Last Name\"  required>\n            <clr-control-error  *clrIfError=\"'required'\"> Last Name is required</clr-control-error>    \n        </clr-input-container>\n\n        <clr-input-container>\n            <input clrInput formControlName=\"email\" type=\"text\" id=\"email\" placeholder=\"Enter Your Email\"  required>\n            <clr-control-error  *clrIfError=\"'required'\"> Email is required</clr-control-error>  \n            <clr-control-error  *clrIfError=\"'errors'\"> Email is incorrect</clr-control-error>    \n        </clr-input-container>\n        \n        <clr-input-container>\n            <input clrInput formControlName=\"password1\" type=\"password\" id=\"password1\" placeholder=\"Enter your password\"  required>\n            <clr-control-error  *clrIfError=\"'required'\"> Password is required</clr-control-error> \n            <clr-control-error  *clrIfError=\"'minLength'\"> Password should be of minLength 6</clr-control-error>      \n        </clr-input-container>\n\n        <clr-input-container>\n            <input clrInput formControlName=\"password2\" type=\"password\" id=\"password2\" placeholder=\"Confirm your password\"  required>\n            <clr-control-error  *clrIfError=\"'required'\"> Password is required</clr-control-error> \n            <clr-control-error  *clrIfError=\"'minLength'\"> Password should be of minLength 6</clr-control-error>      \n        </clr-input-container>\n        \n\n        <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorFlag\">\n            <div class=\"alert-items\">\n                <div class=\"alert-item static\">\n                    <div class=\"alert-icon-wrapper\">\n                        <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n                    </div>\n                    <span class=\"alert-text\">\n                    {{ errorMessage }}\n                    </span>\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onSubmit()\">Submit</button>\n        </div>\n\n    </form>\n\n     \n\n</div>\n<span class=\"spinner spinner-md\" *ngIf=\"loader\">\n    Loading...\n</span>\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { LoginService} from './login.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n\n  constructor(\n    private router: Router,\n    private loginService : LoginService,\n  ) { }\n\n\n  public getToken(){\n    if (JSON.parse(localStorage.getItem('user')) == null) {\n      return false;\n    }\n    return true;\n  } \n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    var currentUser = this.getToken();\n    // console.log('authguard', currentUser);\n    if (currentUser) {\n        // logged in so return true\n        return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login']);\n    return false;\n} \n\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private REST_API_SERVER = \"http://127.0.0.1:8000\";\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'Bearer ' + (localStorage.getItem('token') || null),\n    })\n  };\n\n\n  constructor(private httpClient: HttpClient) { }\n\n  userLogin(data){\n    return this.httpClient.post(this.REST_API_SERVER+\"/rest-auth/login/ \",data,this.httpOptions)\n\n  }\n\n  userVerifyCode(data){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n    // const verification_code = data\n    return this.httpClient.get(this.REST_API_SERVER+\"/api/v1/user/verify-code/?verfication_code=\" + data,httpOptions)\n\n  }\n\n  \n  userProfileDetail(){\n    // http://localhost:8000/api/v1/user/users/ff5a671d-154c-499f-bec4-adc67e19ef97/\n    var user = JSON.parse(localStorage.getItem('user'))\n    return this.httpClient.get(this.REST_API_SERVER+\"/api/v1/user/users/\"+ user['id']+\"/\",this.httpOptions)\n\n  }\n\n  userProfileUpdate(data){\n    // http://localhost:8000/api/v1/user/users/ff5a671d-154c-499f-bec4-adc67e19ef97/\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n    // this.httpOptions.update({\"Authorization\": localStorage.getItem('token')});\n    return this.httpClient.patch(this.REST_API_SERVER+\"/api/v1/user/users/\"+ user['id']+\"/\",data,httpOptions)\n\n  }\n\n\n  logOutUser() {\n    // remove user from local storage and set current user to null\n    if (localStorage.getItem('user') === null){\n      return true;\n    }\n    localStorage.removeItem('user');\n    \n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  private REST_API_SERVER = \"http://127.0.0.1:8000\";\n  constructor(private httpClient: HttpClient) { }\n\n\n\n\n\n\n  createTweet(data) {\n\n    var user = JSON.parse(localStorage.getItem('user'));\n    data['user'] = user.id;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n\n    return this.httpClient.post(this.REST_API_SERVER + \"/api/v1/tweet/tweetlistcreate/\", data, httpOptions)\n\n  }\n\n\n  userTweets() {\n\n    var user = JSON.parse(localStorage.getItem('user'));\n    // data['user'] = user.id;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n\n    return this.httpClient.get(this.REST_API_SERVER + \"/api/v1/tweet/tweetlistcreate/\", httpOptions)\n\n  }\n\n\n  followersTweets() {\n\n    var user = JSON.parse(localStorage.getItem('user'));\n    // data['user'] = user.id;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n\n    return this.httpClient.get(this.REST_API_SERVER + \"/api/v1/tweet/tweetlistcreate/?followers\", httpOptions)\n\n  }\n\n\n  getUsers() {\n    // var user = JSON.parse(localStorage.getItem('user'));\n    // data['user'] = user.id;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n\n    return this.httpClient.get(this.REST_API_SERVER + \"/api/v1/user/users/\", httpOptions)\n  }\n\n  getFollowers() {\n    var user = JSON.parse(localStorage.getItem('user'));\n    // data['user'] = user.id;\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n\n    return this.httpClient.get(this.REST_API_SERVER + \"/api/v1/tweet/userfollowerlistcreate/\", httpOptions)\n  }\n\n  addFollower(id){\n\n    var user = JSON.parse(localStorage.getItem('user'));\n    let data = {}\n    data['user'] = user.id;\n    data['followers'] = [id];\n    let httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'JWT ' + localStorage.getItem('token'),\n      })\n    };\n\n    return this.httpClient.post(this.REST_API_SERVER + \"/api/v1/tweet/userfollowerlistcreate/\", data, httpOptions)\n\n  }\n\n\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n\n  private REST_API_SERVER = \"http://127.0.0.1:8000/rest-auth/registration/\";\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    })\n  };\n  constructor(private httpClient: HttpClient) { }\n\n  userRegistration(user_data){\n    return this.httpClient.post(this.REST_API_SERVER,user_data,this.httpOptions);\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}